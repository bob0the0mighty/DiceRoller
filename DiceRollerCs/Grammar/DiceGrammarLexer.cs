//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DiceGrammar.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Dice.Grammar {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class DiceGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T_DIGIT_STRING=1, T_ALPHA_STRING=2, T_STRING=3, T_D=4, T_FUDGE=5, T_KEEP_HIGH=6, 
		T_KEEP_LOW=7, T_DROP_HIGH=8, T_DROP_LOW=9, T_ADVANTAGE=10, T_DISADVANTAGE=11, 
		T_REROLL=12, T_REROLL_ONCE=13, T_EXPLODE=14, T_COMPOUND=15, T_PENETRATE=16, 
		T_CRIT=17, T_FAIL=18, T_SORT_ASC=19, T_SORT_DESC=20, T_EQUALS=21, T_GREATER=22, 
		T_LESS=23, T_GREATER_EQUALS=24, T_LESS_EQUALS=25, T_NOT_EQUALS=26, T_LBRACE=27, 
		T_RBRACE=28, T_LSQUARE=29, T_RSQUARE=30, T_COMMA=31, T_DOT=32, T_LPAREN=33, 
		T_RPAREN=34, T_PLUS=35, T_MINUS=36, T_MULTIPLY=37, T_DIVIDE=38, WS=39;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T_DIGIT_STRING", "T_ALPHA_STRING", "T_STRING", "T_D", "T_FUDGE", "T_KEEP_HIGH", 
		"T_KEEP_LOW", "T_DROP_HIGH", "T_DROP_LOW", "T_ADVANTAGE", "T_DISADVANTAGE", 
		"T_REROLL", "T_REROLL_ONCE", "T_EXPLODE", "T_COMPOUND", "T_PENETRATE", 
		"T_CRIT", "T_FAIL", "T_SORT_ASC", "T_SORT_DESC", "T_EQUALS", "T_GREATER", 
		"T_LESS", "T_GREATER_EQUALS", "T_LESS_EQUALS", "T_NOT_EQUALS", "T_LBRACE", 
		"T_RBRACE", "T_LSQUARE", "T_RSQUARE", "T_COMMA", "T_DOT", "T_LPAREN", 
		"T_RPAREN", "T_PLUS", "T_MINUS", "T_MULTIPLY", "T_DIVIDE", "WS"
	};


	public DiceGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DiceGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'d'", "'F'", "'kh'", "'kl'", "'dh'", "'dl'", 
		"'ad'", "'da'", "'rr'", "'ro'", "'!e'", "'!c'", "'!p'", "'cs'", "'f'", 
		"'sa'", "'sd'", "'='", "'>'", "'<'", "'>='", "'<='", null, "'{'", "'}'", 
		"'['", "']'", "','", "'.'", "'('", "')'", "'+'", "'-'", "'*'", "'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "T_DIGIT_STRING", "T_ALPHA_STRING", "T_STRING", "T_D", "T_FUDGE", 
		"T_KEEP_HIGH", "T_KEEP_LOW", "T_DROP_HIGH", "T_DROP_LOW", "T_ADVANTAGE", 
		"T_DISADVANTAGE", "T_REROLL", "T_REROLL_ONCE", "T_EXPLODE", "T_COMPOUND", 
		"T_PENETRATE", "T_CRIT", "T_FAIL", "T_SORT_ASC", "T_SORT_DESC", "T_EQUALS", 
		"T_GREATER", "T_LESS", "T_GREATER_EQUALS", "T_LESS_EQUALS", "T_NOT_EQUALS", 
		"T_LBRACE", "T_RBRACE", "T_LSQUARE", "T_RSQUARE", "T_COMMA", "T_DOT", 
		"T_LPAREN", "T_RPAREN", "T_PLUS", "T_MINUS", "T_MULTIPLY", "T_DIVIDE", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DiceGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DiceGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', ')', '\xCB', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x3', '\x2', 
		'\x5', '\x2', 'S', '\n', '\x2', '\x3', '\x2', '\x6', '\x2', 'V', '\n', 
		'\x2', '\r', '\x2', '\xE', '\x2', 'W', '\x3', '\x2', '\x3', '\x2', '\x6', 
		'\x2', '\\', '\n', '\x2', '\r', '\x2', '\xE', '\x2', ']', '\x5', '\x2', 
		'`', '\n', '\x2', '\x3', '\x3', '\x3', '\x3', '\a', '\x3', '\x64', '\n', 
		'\x3', '\f', '\x3', '\xE', '\x3', 'g', '\v', '\x3', '\x3', '\x4', '\x6', 
		'\x4', 'j', '\n', '\x4', '\r', '\x4', '\xE', '\x4', 'k', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', 
		'\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', 
		'\x1B', '\x5', '\x1B', '\xAE', '\n', '\x1B', '\x3', '\x1C', '\x3', '\x1C', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', 
		'\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', '$', '\x3', '$', '\x3', 
		'%', '\x3', '%', '\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x3', 
		'(', '\x3', '(', '\x3', '(', '\x3', '(', '\x2', '\x2', ')', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', 
		'/', '\x19', '\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', '\x1D', 
		'\x39', '\x1E', ';', '\x1F', '=', ' ', '?', '!', '\x41', '\"', '\x43', 
		'#', '\x45', '$', 'G', '%', 'I', '&', 'K', '\'', 'M', '(', 'O', ')', '\x3', 
		'\x2', '\a', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', 
		'|', '\x5', '\x2', '\x32', ';', '\x43', '\\', '\x63', '|', '\a', '\x2', 
		'*', '+', ']', ']', '_', '_', '}', '}', '\x7F', '\x7F', '\f', '\x2', '\v', 
		'\xF', '\"', '\"', '\x87', '\x87', '\xA2', '\xA2', '\x1682', '\x1682', 
		'\x2002', '\x200C', '\x202A', '\x202B', '\x2031', '\x2031', '\x2061', 
		'\x2061', '\x3002', '\x3002', '\x2', '\xD1', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x2', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x45', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'G', '\x3', '\x2', '\x2', '\x2', '\x2', 'I', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'K', '\x3', '\x2', '\x2', '\x2', '\x2', 'M', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'O', '\x3', '\x2', '\x2', '\x2', '\x3', 'R', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '\x61', '\x3', '\x2', '\x2', '\x2', '\a', 
		'i', '\x3', '\x2', '\x2', '\x2', '\t', 'm', '\x3', '\x2', '\x2', '\x2', 
		'\v', 'o', '\x3', '\x2', '\x2', '\x2', '\r', 'q', '\x3', '\x2', '\x2', 
		'\x2', '\xF', 't', '\x3', '\x2', '\x2', '\x2', '\x11', 'w', '\x3', '\x2', 
		'\x2', '\x2', '\x13', 'z', '\x3', '\x2', '\x2', '\x2', '\x15', '}', '\x3', 
		'\x2', '\x2', '\x2', '\x17', '\x80', '\x3', '\x2', '\x2', '\x2', '\x19', 
		'\x83', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x86', '\x3', '\x2', '\x2', 
		'\x2', '\x1D', '\x89', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '!', '\x8F', '\x3', '\x2', '\x2', '\x2', '#', '\x92', 
		'\x3', '\x2', '\x2', '\x2', '%', '\x95', '\x3', '\x2', '\x2', '\x2', '\'', 
		'\x97', '\x3', '\x2', '\x2', '\x2', ')', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '+', '\x9D', '\x3', '\x2', '\x2', '\x2', '-', '\x9F', '\x3', '\x2', 
		'\x2', '\x2', '/', '\xA1', '\x3', '\x2', '\x2', '\x2', '\x31', '\xA3', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\xA6', '\x3', '\x2', '\x2', '\x2', 
		'\x35', '\xAD', '\x3', '\x2', '\x2', '\x2', '\x37', '\xAF', '\x3', '\x2', 
		'\x2', '\x2', '\x39', '\xB1', '\x3', '\x2', '\x2', '\x2', ';', '\xB3', 
		'\x3', '\x2', '\x2', '\x2', '=', '\xB5', '\x3', '\x2', '\x2', '\x2', '?', 
		'\xB7', '\x3', '\x2', '\x2', '\x2', '\x41', '\xB9', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\xBB', '\x3', '\x2', '\x2', '\x2', '\x45', '\xBD', '\x3', 
		'\x2', '\x2', '\x2', 'G', '\xBF', '\x3', '\x2', '\x2', '\x2', 'I', '\xC1', 
		'\x3', '\x2', '\x2', '\x2', 'K', '\xC3', '\x3', '\x2', '\x2', '\x2', 'M', 
		'\xC5', '\x3', '\x2', '\x2', '\x2', 'O', '\xC7', '\x3', '\x2', '\x2', 
		'\x2', 'Q', 'S', '\a', '/', '\x2', '\x2', 'R', 'Q', '\x3', '\x2', '\x2', 
		'\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 'S', 'U', '\x3', '\x2', '\x2', 
		'\x2', 'T', 'V', '\t', '\x2', '\x2', '\x2', 'U', 'T', '\x3', '\x2', '\x2', 
		'\x2', 'V', 'W', '\x3', '\x2', '\x2', '\x2', 'W', 'U', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', '_', '\x3', '\x2', '\x2', 
		'\x2', 'Y', '[', '\a', '\x30', '\x2', '\x2', 'Z', '\\', '\t', '\x2', '\x2', 
		'\x2', '[', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\x3', '\x2', 
		'\x2', '\x2', ']', '[', '\x3', '\x2', '\x2', '\x2', ']', '^', '\x3', '\x2', 
		'\x2', '\x2', '^', '`', '\x3', '\x2', '\x2', '\x2', '_', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '_', '`', '\x3', '\x2', '\x2', '\x2', '`', '\x4', '\x3', 
		'\x2', '\x2', '\x2', '\x61', '\x65', '\t', '\x3', '\x2', '\x2', '\x62', 
		'\x64', '\t', '\x4', '\x2', '\x2', '\x63', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\x64', 'g', '\x3', '\x2', '\x2', '\x2', '\x65', '\x63', '\x3', 
		'\x2', '\x2', '\x2', '\x65', '\x66', '\x3', '\x2', '\x2', '\x2', '\x66', 
		'\x6', '\x3', '\x2', '\x2', '\x2', 'g', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'h', 'j', '\n', '\x5', '\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 
		'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '\b', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'n', '\a', '\x66', '\x2', '\x2', 'n', '\n', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'p', '\a', 'H', '\x2', '\x2', 'p', '\f', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'r', '\a', 'm', '\x2', '\x2', 'r', 's', '\a', 'j', 
		'\x2', '\x2', 's', '\xE', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', 
		'm', '\x2', '\x2', 'u', 'v', '\a', 'n', '\x2', '\x2', 'v', '\x10', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'x', '\a', '\x66', '\x2', '\x2', 'x', 'y', '\a', 
		'j', '\x2', '\x2', 'y', '\x12', '\x3', '\x2', '\x2', '\x2', 'z', '{', 
		'\a', '\x66', '\x2', '\x2', '{', '|', '\a', 'n', '\x2', '\x2', '|', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '}', '~', '\a', '\x63', '\x2', '\x2', '~', 
		'\x7F', '\a', '\x66', '\x2', '\x2', '\x7F', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x81', '\a', '\x66', '\x2', '\x2', '\x81', '\x82', '\a', 
		'\x63', '\x2', '\x2', '\x82', '\x18', '\x3', '\x2', '\x2', '\x2', '\x83', 
		'\x84', '\a', 't', '\x2', '\x2', '\x84', '\x85', '\a', 't', '\x2', '\x2', 
		'\x85', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\a', 't', 
		'\x2', '\x2', '\x87', '\x88', '\a', 'q', '\x2', '\x2', '\x88', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\a', '#', '\x2', '\x2', '\x8A', 
		'\x8B', '\a', 'g', '\x2', '\x2', '\x8B', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8D', '\a', '#', '\x2', '\x2', '\x8D', '\x8E', '\a', 
		'\x65', '\x2', '\x2', '\x8E', ' ', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x90', '\a', '#', '\x2', '\x2', '\x90', '\x91', '\a', 'r', '\x2', '\x2', 
		'\x91', '\"', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\a', '\x65', 
		'\x2', '\x2', '\x93', '\x94', '\a', 'u', '\x2', '\x2', '\x94', '$', '\x3', 
		'\x2', '\x2', '\x2', '\x95', '\x96', '\a', 'h', '\x2', '\x2', '\x96', 
		'&', '\x3', '\x2', '\x2', '\x2', '\x97', '\x98', '\a', 'u', '\x2', '\x2', 
		'\x98', '\x99', '\a', '\x63', '\x2', '\x2', '\x99', '(', '\x3', '\x2', 
		'\x2', '\x2', '\x9A', '\x9B', '\a', 'u', '\x2', '\x2', '\x9B', '\x9C', 
		'\a', '\x66', '\x2', '\x2', '\x9C', '*', '\x3', '\x2', '\x2', '\x2', '\x9D', 
		'\x9E', '\a', '?', '\x2', '\x2', '\x9E', ',', '\x3', '\x2', '\x2', '\x2', 
		'\x9F', '\xA0', '\a', '@', '\x2', '\x2', '\xA0', '.', '\x3', '\x2', '\x2', 
		'\x2', '\xA1', '\xA2', '\a', '>', '\x2', '\x2', '\xA2', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\xA3', '\xA4', '\a', '@', '\x2', '\x2', '\xA4', 
		'\xA5', '\a', '?', '\x2', '\x2', '\xA5', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\xA6', '\xA7', '\a', '>', '\x2', '\x2', '\xA7', '\xA8', '\a', 
		'?', '\x2', '\x2', '\xA8', '\x34', '\x3', '\x2', '\x2', '\x2', '\xA9', 
		'\xAA', '\a', '#', '\x2', '\x2', '\xAA', '\xAE', '\a', '?', '\x2', '\x2', 
		'\xAB', '\xAC', '\a', '>', '\x2', '\x2', '\xAC', '\xAE', '\a', '@', '\x2', 
		'\x2', '\xAD', '\xA9', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAB', '\x3', 
		'\x2', '\x2', '\x2', '\xAE', '\x36', '\x3', '\x2', '\x2', '\x2', '\xAF', 
		'\xB0', '\a', '}', '\x2', '\x2', '\xB0', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\xB1', '\xB2', '\a', '\x7F', '\x2', '\x2', '\xB2', ':', '\x3', 
		'\x2', '\x2', '\x2', '\xB3', '\xB4', '\a', ']', '\x2', '\x2', '\xB4', 
		'<', '\x3', '\x2', '\x2', '\x2', '\xB5', '\xB6', '\a', '_', '\x2', '\x2', 
		'\xB6', '>', '\x3', '\x2', '\x2', '\x2', '\xB7', '\xB8', '\a', '.', '\x2', 
		'\x2', '\xB8', '@', '\x3', '\x2', '\x2', '\x2', '\xB9', '\xBA', '\a', 
		'\x30', '\x2', '\x2', '\xBA', '\x42', '\x3', '\x2', '\x2', '\x2', '\xBB', 
		'\xBC', '\a', '*', '\x2', '\x2', '\xBC', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\xBD', '\xBE', '\a', '+', '\x2', '\x2', '\xBE', '\x46', '\x3', 
		'\x2', '\x2', '\x2', '\xBF', '\xC0', '\a', '-', '\x2', '\x2', '\xC0', 
		'H', '\x3', '\x2', '\x2', '\x2', '\xC1', '\xC2', '\a', '/', '\x2', '\x2', 
		'\xC2', 'J', '\x3', '\x2', '\x2', '\x2', '\xC3', '\xC4', '\a', ',', '\x2', 
		'\x2', '\xC4', 'L', '\x3', '\x2', '\x2', '\x2', '\xC5', '\xC6', '\a', 
		'\x31', '\x2', '\x2', '\xC6', 'N', '\x3', '\x2', '\x2', '\x2', '\xC7', 
		'\xC8', '\t', '\x6', '\x2', '\x2', '\xC8', '\xC9', '\x3', '\x2', '\x2', 
		'\x2', '\xC9', '\xCA', '\b', '(', '\x2', '\x2', '\xCA', 'P', '\x3', '\x2', 
		'\x2', '\x2', '\n', '\x2', 'R', 'W', ']', '_', '\x65', 'k', '\xAD', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Dice.Grammar
