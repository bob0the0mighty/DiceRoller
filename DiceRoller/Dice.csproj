<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;net452</TargetFrameworks>
        <PackageId>DiceRoller</PackageId>
        <Version>3.2.0</Version>
        <Authors>Ryan Schmidt</Authors>
        <Company>Ryan Schmidt</Company>
        <Product>DiceRoller</Product>
        <Description>Extensible and well-documented dice roller with a robust set of features. Excellent for play-by-post forums, virtual tabletops, or for integrating into character sheets or encounter managers.</Description>
        <Copyright>Copyright ©2015-2018 Ryan Schmidt</Copyright>
        <PackageLicenseUrl>https://github.com/skizzerz/DiceRoller/blob/master/LICENSE</PackageLicenseUrl>
        <PackageProjectUrl>https://skizzerz.net/DiceRoller</PackageProjectUrl>
        <PackageIconUrl>https://skizzerz.net/DiceRoller/images/thumb/5/56/DiceRoller_Logo.svg/256px-DiceRoller_Logo.svg.png</PackageIconUrl>
        <RepositoryUrl>https://github.com/skizzerz/DiceRoller</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageTags>die dice roller game games d&amp;d pathfinder rpg pbp tabletop vtt</PackageTags>
        <PackageReleaseNotes>
            <![CDATA[
            New features:
            - DiceRoller is now packaged for both .NET Standard 2.0 as well as .NET Framework 4.5.2. .NET Standard 2.0 supports .NET Framework 4.6.1+ and .NET Core 2.0.
            - Success/failure rolls can now be decorated with critical/fumbles. A critical success (a roll that is both a critical and a success) is worth 2 successes, and a critical failure (a roll that is both a fumble and a failure) is worth -2 successes. This expands support into game systems which use success-based rolls but have varying degrees of success beyond just +1 or -1.
            - Unless a success/failure roll is explicitly decorated with a critical/fumble, those rolls will not be marked as criticals or fumbles even if the max or min amount is rolled. This keeps default behavior with such rolls consistent with how they worked previously.
            - A new [numDice] macro was added, which returns the number of dice rolled in the most recent dice expression before it.
            - A new property RollerConfig.RollDie was added to allow customizing the result of a die roll in a more friendly way. This property is a callback which receives the minimum and maximum value it can roll for a die, and should return a number within that range. By default, it will call RollerConfig.GetRandomBytes repeatedly until it gets a result it can transform into the output range without introducing any bias.
            - New APIs Roller.Max(), Roller.Min(), and Roller.Average() evaluate the dice expression and return the maximum, minimum, or average result.

            Updates:
            - Updated ANTLR runtime version from 4.7.1 to 4.7.1.1

            See https://skizzerz.net/DiceRoller/Changelog for more changes.
            ]]>
          </PackageReleaseNotes>
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>DiceRoller.snk</AssemblyOriginatorKeyFile>
        <DelaySign>false</DelaySign>
    </PropertyGroup>
    <ItemGroup>
      <PackageReference Include="Antlr4.Runtime.Standard" Version="4.7.1.1" />
      <PackageReference Include="System.ValueTuple" Version="4.4.0" />
    </ItemGroup>
</Project>
